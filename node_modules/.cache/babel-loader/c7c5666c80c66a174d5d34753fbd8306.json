{"ast":null,"code":"var _jsxFileName = \"C:\\\\MY\\\\React-Apps\\\\my-app-reduxtoolkit\\\\src\\\\pages\\\\UsersPage.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUsers } from '../actions/usersActions';\nimport { User } from '../components/User';\n\nconst UsersPage = ({\n  dispatch,\n  users,\n  loading,\n  hasErrors\n}) => {\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  const renderUsers = () => {\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Loading Users ...\");\n    if (hasErrors) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Unable to display Users.\");\n    return users.map(user => React.createElement(User, {\n      key: user.id,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Users\"), renderUsers());\n};\n\nconst mapStateToProps = state => ({\n  loading: state.users.loading,\n  users: state.users.users,\n  hasErrors: state.users.hasErrors\n});\n\nexport default connect(mapStateToProps)(UsersPage);","map":{"version":3,"sources":["C:/MY/React-Apps/my-app-reduxtoolkit/src/pages/UsersPage.js"],"names":["React","useEffect","connect","fetchUsers","User","UsersPage","dispatch","users","loading","hasErrors","renderUsers","map","user","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,IAAT,QAAqB,oBAArB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA;AAA5B,CAAD,KAA6C;AAC3DR,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACH,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACtB,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACb,QAAIC,SAAJ,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACf,WAAOF,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,MAAA,IAAI,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,CAAP;AAEH,GALD;;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEKF,WAAW,EAFhB,CADJ;AAMH,CAlBD;;AAoBA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,OAAO,EAAEO,KAAK,CAACR,KAAN,CAAYC,OADS;AAE9BD,EAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,CAAYA,KAFW;AAG9BE,EAAAA,SAAS,EAAEM,KAAK,CAACR,KAAN,CAAYE;AAHO,CAAL,CAA7B;;AAOA,eAAeP,OAAO,CAACY,eAAD,CAAP,CAAyBT,SAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { fetchUsers } from '../actions/usersActions'\r\nimport { User } from '../components/User'\r\n\r\n\r\nconst UsersPage = ({ dispatch, users, loading, hasErrors }) => {\r\n    useEffect(() => {\r\n        dispatch(fetchUsers())\r\n    }, [dispatch])\r\n\r\n    const renderUsers = () => {\r\n        if (loading) return <p>Loading Users ...</p>\r\n        if (hasErrors) return <p>Unable to display Users.</p>\r\n        return users.map(user => <User key={user.id} user={user}></User>)\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <h1>Users</h1>\r\n            {renderUsers()}\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.users.loading,\r\n    users: state.users.users,\r\n    hasErrors: state.users.hasErrors,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps)(UsersPage)"]},"metadata":{},"sourceType":"module"}