{"ast":null,"code":"var _jsxFileName = \"C:\\\\MY\\\\React-Apps\\\\my-app-reduxtoolkit\\\\src\\\\pages\\\\SinglePostPage.js\";\nimport React, { useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { fetchPost, postSelector } from \"../slices/post\";\nimport { fetchComments, commentsSelector } from \"../slices/comments\";\nimport { Post } from \"../components/Post\";\nimport { Comment } from \"../components/Comment\";\n\nconst SinglePostPage = ({\n  match,\n  dispatch,\n  post,\n  comments,\n  hasErrors,\n  loading\n}) => {\n  useEffect(() => {\n    const {\n      id\n    } = match.params;\n    dispatch(fetchComments(id));\n    dispatch(fetchPost(id));\n  }, [dispatch, match]);\n\n  const renderPost = () => {\n    if (loading.post) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Loading post...\");\n    if (hasErrors.post) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Unable to display post.\");\n    return React.createElement(Post, {\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  };\n\n  const renderComments = () => {\n    if (loading.comments) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Loading comments...\");\n    if (hasErrors.comments) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Unable to display comments.\");\n    return comments.map(comment => React.createElement(Comment, {\n      key: comment.id,\n      comment: comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, renderPost(), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Comments\"), renderComments());\n};\n\nexport default SinglePostPage;","map":{"version":3,"sources":["C:/MY/React-Apps/my-app-reduxtoolkit/src/pages/SinglePostPage.js"],"names":["React","useEffect","connect","useDispatch","fetchPost","postSelector","fetchComments","commentsSelector","Post","Comment","SinglePostPage","match","dispatch","post","comments","hasErrors","loading","id","params","renderPost","renderComments","map","comment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AAEA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,gBAAxC;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,oBAAhD;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,KADsB;AAEtBC,EAAAA,QAFsB;AAGtBC,EAAAA,IAHsB;AAItBC,EAAAA,QAJsB;AAKtBC,EAAAA,SALsB;AAMtBC,EAAAA;AANsB,CAAD,KAOjB;AAEJf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEgB,MAAAA;AAAF,QAASN,KAAK,CAACO,MAArB;AAEAN,IAAAA,QAAQ,CAACN,aAAa,CAACW,EAAD,CAAd,CAAR;AACAL,IAAAA,QAAQ,CAACR,SAAS,CAACa,EAAD,CAAV,CAAR;AACD,GALQ,EAKN,CAACL,QAAD,EAAWD,KAAX,CALM,CAAT;;AAOA,QAAMQ,UAAU,GAAG,MAAM;AACvB,QAAIH,OAAO,CAACH,IAAZ,EAAkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAClB,QAAIE,SAAS,CAACF,IAAd,EAAoB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AAEpB,WAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALD;;AAOA,QAAMO,cAAc,GAAG,MAAM;AAC3B,QAAIJ,OAAO,CAACF,QAAZ,EAAsB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACtB,QAAIC,SAAS,CAACD,QAAd,EAAwB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AAExB,WAAOA,QAAQ,CAACO,GAAT,CAAaC,OAAO,IACzB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACL,EAAtB;AAA0B,MAAA,OAAO,EAAEK,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAGD,GAPD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,EADb,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGC,cAAc,EAHjB,CADF;AAOD,CAvCD;;AAyCA,eAAeV,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\n\r\nimport { fetchPost, postSelector } from \"../slices/post\";\r\nimport { fetchComments, commentsSelector } from \"../slices/comments\";\r\n\r\nimport { Post } from \"../components/Post\";\r\nimport { Comment } from \"../components/Comment\";\r\n\r\nconst SinglePostPage = ({\r\n  match,\r\n  dispatch,\r\n  post,\r\n  comments,\r\n  hasErrors,\r\n  loading\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    const { id } = match.params;\r\n\r\n    dispatch(fetchComments(id));\r\n    dispatch(fetchPost(id));\r\n  }, [dispatch, match]);\r\n\r\n  const renderPost = () => {\r\n    if (loading.post) return <p>Loading post...</p>;\r\n    if (hasErrors.post) return <p>Unable to display post.</p>;\r\n\r\n    return <Post post={post} />;\r\n  };\r\n\r\n  const renderComments = () => {\r\n    if (loading.comments) return <p>Loading comments...</p>;\r\n    if (hasErrors.comments) return <p>Unable to display comments.</p>;\r\n\r\n    return comments.map(comment => (\r\n      <Comment key={comment.id} comment={comment} />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      {renderPost()}\r\n      <h2>Comments</h2>\r\n      {renderComments()}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SinglePostPage;\r\n"]},"metadata":{},"sourceType":"module"}