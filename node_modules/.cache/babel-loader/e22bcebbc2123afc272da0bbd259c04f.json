{"ast":null,"code":"var _jsxFileName = \"C:\\\\MY\\\\React-Apps\\\\my-app-reduxtoolkit\\\\src\\\\pages\\\\SinglePostPage.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPost } from '../actions/postActions';\nimport { fetchComments } from '../actions/commentsActions';\nimport { Post } from '../components/Post';\nimport { Comment } from '../components/Comment';\n\nconst SinglePostPage = ({\n  match,\n  dispatch,\n  post,\n  comments,\n  hasErrors,\n  loading\n}) => {\n  useEffect(() => {\n    const {\n      id\n    } = match.params;\n    dispatch(fetchComments(id));\n    dispatch(fetchPost(id));\n  }, [dispatch, match]);\n\n  const renderPost = () => {\n    if (loading.post) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Loading post...\");\n    if (hasErrors.post) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Unable to display post.\");\n    return React.createElement(Post, {\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  };\n\n  const renderComments = () => {\n    if (loading.comments) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Loading comments...\");\n    if (hasErrors.comments) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Unable to display comments.\");\n    return comments.map(comment => React.createElement(Comment, {\n      key: comment.id,\n      comment: comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, renderPost(), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Comments\"), renderComments());\n};\n\nconst mapStateToProps = state => ({\n  post: state.post.post,\n  comments: state.comments.comments,\n  loading: {\n    post: state.post.loading,\n    comments: state.comments.loading\n  },\n  hasErrors: {\n    post: state.post.hasErrors,\n    comments: state.comments.hasErrors\n  }\n});\n\nexport default connect(mapStateToProps)(SinglePostPage);","map":{"version":3,"sources":["C:/MY/React-Apps/my-app-reduxtoolkit/src/pages/SinglePostPage.js"],"names":["React","useEffect","connect","fetchPost","fetchComments","Post","Comment","SinglePostPage","match","dispatch","post","comments","hasErrors","loading","id","params","renderPost","renderComments","map","comment","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,KADsB;AAEtBC,EAAAA,QAFsB;AAGtBC,EAAAA,IAHsB;AAItBC,EAAAA,QAJsB;AAKtBC,EAAAA,SALsB;AAMtBC,EAAAA;AANsB,CAAD,KAOjB;AACJZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEa,MAAAA;AAAF,QAASN,KAAK,CAACO,MAArB;AAEAN,IAAAA,QAAQ,CAACL,aAAa,CAACU,EAAD,CAAd,CAAR;AACAL,IAAAA,QAAQ,CAACN,SAAS,CAACW,EAAD,CAAV,CAAR;AACD,GALQ,EAKN,CAACL,QAAD,EAAWD,KAAX,CALM,CAAT;;AAOA,QAAMQ,UAAU,GAAG,MAAM;AACvB,QAAIH,OAAO,CAACH,IAAZ,EAAkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAClB,QAAIE,SAAS,CAACF,IAAd,EAAoB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AAEpB,WAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALD;;AAOA,QAAMO,cAAc,GAAG,MAAM;AAC3B,QAAIJ,OAAO,CAACF,QAAZ,EAAsB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACtB,QAAIC,SAAS,CAACD,QAAd,EAAwB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP;AAExB,WAAOA,QAAQ,CAACO,GAAT,CAAaC,OAAO,IACzB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACL,EAAtB;AAA0B,MAAA,OAAO,EAAEK,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAAP;AAGD,GAPD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,EADb,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGC,cAAc,EAHjB,CADF;AAOD,CAtCD;;AAwCA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,IAAI,EAAEW,KAAK,CAACX,IAAN,CAAWA,IADe;AAEhCC,EAAAA,QAAQ,EAAEU,KAAK,CAACV,QAAN,CAAeA,QAFO;AAGhCE,EAAAA,OAAO,EAAE;AAAEH,IAAAA,IAAI,EAAEW,KAAK,CAACX,IAAN,CAAWG,OAAnB;AAA4BF,IAAAA,QAAQ,EAAEU,KAAK,CAACV,QAAN,CAAeE;AAArD,GAHuB;AAIhCD,EAAAA,SAAS,EAAE;AAAEF,IAAAA,IAAI,EAAEW,KAAK,CAACX,IAAN,CAAWE,SAAnB;AAA8BD,IAAAA,QAAQ,EAAEU,KAAK,CAACV,QAAN,CAAeC;AAAvD;AAJqB,CAAL,CAA7B;;AAOA,eAAeV,OAAO,CAACkB,eAAD,CAAP,CAAyBb,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { fetchPost } from '../actions/postActions'\r\nimport { fetchComments } from '../actions/commentsActions'\r\n\r\nimport { Post } from '../components/Post'\r\nimport { Comment } from '../components/Comment'\r\n\r\nconst SinglePostPage = ({\r\n  match,\r\n  dispatch,\r\n  post,\r\n  comments,\r\n  hasErrors,\r\n  loading,\r\n}) => {\r\n  useEffect(() => {\r\n    const { id } = match.params\r\n\r\n    dispatch(fetchComments(id))\r\n    dispatch(fetchPost(id))\r\n  }, [dispatch, match])\r\n\r\n  const renderPost = () => {\r\n    if (loading.post) return <p>Loading post...</p>\r\n    if (hasErrors.post) return <p>Unable to display post.</p>\r\n\r\n    return <Post post={post} />\r\n  }\r\n\r\n  const renderComments = () => {\r\n    if (loading.comments) return <p>Loading comments...</p>\r\n    if (hasErrors.comments) return <p>Unable to display comments.</p>\r\n\r\n    return comments.map(comment => (\r\n      <Comment key={comment.id} comment={comment} />\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {renderPost()}\r\n      <h2>Comments</h2>\r\n      {renderComments()}\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post.post,\r\n  comments: state.comments.comments,\r\n  loading: { post: state.post.loading, comments: state.comments.loading },\r\n  hasErrors: { post: state.post.hasErrors, comments: state.comments.hasErrors },\r\n})\r\n\r\nexport default connect(mapStateToProps)(SinglePostPage)\r\n"]},"metadata":{},"sourceType":"module"}