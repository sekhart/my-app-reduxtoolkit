{"ast":null,"code":"var _jsxFileName = \"C:\\\\MY\\\\React-Apps\\\\my-app-reduxtoolkit\\\\src\\\\pages\\\\PostsPage.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts, postsSelector } from '../slices/posts';\nimport { Post } from '../components/Post';\n\nconst PostsPage = () => {\n  const dispatch = useDispatch();\n  const {\n    posts,\n    loading,\n    hasErrors\n  } = useSelector(postsSelector);\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const renderPosts = () => {\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Loading posts...\");\n    if (hasErrors) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Unable to display posts.\"); // return posts.map(post => <Post key={post.id} post={post} excerpt />)\n  };\n\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Posts\"), renderPosts());\n};\n\nexport default PostsPage;","map":{"version":3,"sources":["C:/MY/React-Apps/my-app-reduxtoolkit/src/pages/PostsPage.js"],"names":["React","useEffect","useDispatch","useSelector","fetchPosts","postsSelector","Post","PostsPage","dispatch","posts","loading","hasErrors","renderPosts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,iBAA1C;AAEA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAAgCR,WAAW,CAACE,aAAD,CAAjD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACb,QAAIC,SAAJ,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP,CAFS,CAIxB;AACD,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGC,WAAW,EAFd,CADF;AAMD,CArBD;;AAuBA,eAAeL,SAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { fetchPosts, postsSelector } from '../slices/posts'\r\n\r\nimport { Post } from '../components/Post'\r\n\r\nconst PostsPage = () => {\r\n  const dispatch = useDispatch()\r\n  const { posts, loading, hasErrors } = useSelector(postsSelector)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPosts())\r\n  }, [dispatch])\r\n\r\n  const renderPosts = () => {\r\n    if (loading) return <p>Loading posts...</p>\r\n    if (hasErrors) return <p>Unable to display posts.</p>\r\n\r\n    // return posts.map(post => <Post key={post.id} post={post} excerpt />)\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <h1>Posts</h1>\r\n      {renderPosts()}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostsPage\r\n"]},"metadata":{},"sourceType":"module"}