{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  loading: false,\n  hasErrors: false,\n  posts: []\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    getPosts: state => {\n      state.loading = true;\n    },\n    getPostsSuccess: (state, {\n      payload\n    }) => {\n      state.posts = payload;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n    getPostsFailure: state => {\n      state.loading = false;\n      state.hasErrors = true;\n    }\n  }\n});\nexport const {\n  getPosts,\n  getPostsSuccess,\n  getPostsFailure\n} = postsSlice.actions;\nexport const postsSelector = state => state.posts;\nexport default postsSlice.reducer;\nexport function fetchPosts() {\n  return async dispatch => {\n    dispatch(getPosts());\n\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n      const data = await response.json();\n      dispatch(getPostsSuccess(data));\n    } catch (error) {\n      dispatch(getPostsFailure());\n    }\n  };\n}","map":{"version":3,"sources":["C:/MY/React-Apps/my-app-reduxtoolkit/src/slices/posts.js"],"names":["createSlice","initialState","loading","hasErrors","posts","postsSlice","name","reducers","getPosts","state","getPostsSuccess","payload","getPostsFailure","actions","postsSelector","reducer","fetchPosts","dispatch","response","fetch","data","json","error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,SAAS,EAAE,KAFe;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAArB;AAMP,MAAMC,UAAU,GAAGL,WAAW,CAAC;AAC7BM,EAAAA,IAAI,EAAE,OADuB;AAE7BL,EAAAA,YAF6B;AAG7BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAEC,KAAK,IAAI;AACjBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACD,KAHO;AAIRQ,IAAAA,eAAe,EAAE,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACvCF,MAAAA,KAAK,CAACL,KAAN,GAAcO,OAAd;AACAF,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACD,KARO;AASRS,IAAAA,eAAe,EAAEH,KAAK,IAAI;AACxBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACD;AAZO;AAHmB,CAAD,CAA9B;AAmBA,OAAO,MAAM;AAAEK,EAAAA,QAAF;AAAYE,EAAAA,eAAZ;AAA6BE,EAAAA;AAA7B,IAAiDP,UAAU,CAACQ,OAAlE;AACP,OAAO,MAAMC,aAAa,GAAGL,KAAK,IAAIA,KAAK,CAACL,KAArC;AACP,eAAeC,UAAU,CAACU,OAA1B;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO,MAAMC,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAACT,QAAQ,EAAT,CAAR;;AAEA,QAAI;AACF,YAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAJ,MAAAA,QAAQ,CAACP,eAAe,CAACU,IAAD,CAAhB,CAAR;AACD,KALD,CAKE,OAAOE,KAAP,EAAc;AACdL,MAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR;AACD;AACF,GAXD;AAYD","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  posts: [],\r\n}\r\n\r\nconst postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {\r\n    getPosts: state => {\r\n      state.loading = true\r\n    },\r\n    getPostsSuccess: (state, { payload }) => {\r\n      state.posts = payload\r\n      state.loading = false\r\n      state.hasErrors = false\r\n    },\r\n    getPostsFailure: state => {\r\n      state.loading = false\r\n      state.hasErrors = true\r\n    },\r\n  },\r\n})\r\n\r\nexport const { getPosts, getPostsSuccess, getPostsFailure } = postsSlice.actions\r\nexport const postsSelector = state => state.posts\r\nexport default postsSlice.reducer\r\n\r\nexport function fetchPosts() {\r\n  return async dispatch => {\r\n    dispatch(getPosts())\r\n\r\n    try {\r\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts')\r\n      const data = await response.json()\r\n\r\n      dispatch(getPostsSuccess(data))\r\n    } catch (error) {\r\n      dispatch(getPostsFailure())\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}