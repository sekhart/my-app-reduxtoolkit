{"ast":null,"code":"var _jsxFileName = \"C:\\\\MY\\\\React-Apps\\\\my-app-reduxtoolkit\\\\src\\\\pages\\\\PostsPage.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postsActions';\nimport { fetchComments } from '../actions/commentsActions';\nimport { Post } from '../components/Post';\nimport { Comment } from '../components/Comment';\n\nconst PostsPage = ({\n  dispatch,\n  posts,\n  loading,\n  hasErrors\n}) => {\n  useEffect(() => {\n    dispatch(fetchPosts());\n    dispatch(fetchComments());\n  }, [dispatch]);\n\n  const renderPosts = () => {\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \" Loading Posts... \");\n    if (hasErrors) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \" Unable to display Posts. \");\n    return posts.map(post => React.createElement(Post, {\n      key: post.id,\n      post: post,\n      excerpt: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" \"));\n  };\n\n  return React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" Posts \"), \" \", renderPosts(), \" \");\n};\n\nconst mapStateToProps = state => ({\n  loading: state.posts.loading,\n  posts: state.posts.posts,\n  hasErrors: state.posts.hasErrors\n});\n\nexport default connect(mapStateToProps)(PostsPage);","map":{"version":3,"sources":["C:/MY/React-Apps/my-app-reduxtoolkit/src/pages/PostsPage.js"],"names":["React","useEffect","connect","fetchPosts","fetchComments","Post","Comment","PostsPage","dispatch","posts","loading","hasErrors","renderPosts","map","post","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA;AAA5B,CAAD,KAA6C;AACvDV,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACAK,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACH,GAHQ,EAGN,CAACI,QAAD,CAHM,CAAT;;AAKA,QAAMI,WAAW,GAAG,MAAM;AACtB,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACb,QAAIC,SAAJ,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAP;AACf,WAAOF,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI,oBAAE,IAAF;AAAO,MAAA,GAAG,EAAKA,IAAI,CAACC,EAApB;AACrB,MAAA,IAAI,EAAKD,IADY;AAErB,MAAA,OAAO,MAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAlB,CAAP;AAIC,GAPL;;AASI,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFK,OAGeF,WAAW,EAH1B,MAAT;AAMH,CArBT;;AAuBQ,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,OAAO,EAAEO,KAAK,CAACR,KAAN,CAAYC,OADS;AAE9BD,EAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,CAAYA,KAFW;AAG9BE,EAAAA,SAAS,EAAEM,KAAK,CAACR,KAAN,CAAYE;AAHO,CAAL,CAA7B;;AAQA,eAAeT,OAAO,CAACc,eAAD,CAAP,CAAyBT,SAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { fetchPosts } from '../actions/postsActions'\r\nimport { fetchComments } from '../actions/commentsActions'\r\nimport { Post } from '../components/Post'\r\nimport { Comment } from '../components/Comment'\r\n\r\nconst PostsPage = ({ dispatch, posts, loading, hasErrors }) => {\r\n        useEffect(() => {\r\n            dispatch(fetchPosts())\r\n            dispatch(fetchComments())\r\n        }, [dispatch])\r\n\r\n        const renderPosts = () => {\r\n            if (loading) return <p > Loading Posts... < /p>\r\n            if (hasErrors) return <p > Unable to display Posts. < /p>\r\n            return posts.map(post => < Post key = { post.id }\r\n                post = { post }\r\n                excerpt > < /Post>)\r\n\r\n            }\r\n\r\n            return ( <\r\n                section >\r\n                <\r\n                h1 > Posts < /h1> { renderPosts() } <\r\n                /section>\r\n            )\r\n        }\r\n\r\n        const mapStateToProps = state => ({\r\n            loading: state.posts.loading,\r\n            posts: state.posts.posts,\r\n            hasErrors: state.posts.hasErrors,\r\n\r\n        })\r\n\r\n\r\n        export default connect(mapStateToProps)(PostsPage)"]},"metadata":{},"sourceType":"module"}